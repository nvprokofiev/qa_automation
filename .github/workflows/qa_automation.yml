name: QA Automation

on:
  pull_request:
    types: [labeled]

jobs:
  qa_automation:
    if: github.event.label.name == 'Pending QA'
    runs-on: ubuntu-latest
    steps:
      - name: Set Mobile QA as reviewer
        uses: actions/github-script@v7
        with:
          github-token: ${{secrets.PAT}}
          script: |
            github.rest.pulls.requestReviewers({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number,
              reviewers: ['MobileQA']
            })

      - name: Extract Jira ticket number
        id: extract_ticket
        run: |
          TICKET=$(echo "${{ github.event.pull_request.title }}" | grep -oP '^IO-\d+')
          echo "TICKET=$TICKET" >> $GITHUB_OUTPUT

      - name: Update Jira ticket and set resolution
        env:
          JIRA_BASE_URL: ${{ secrets.JIRA_BASE_URL }}
          JIRA_USER_EMAIL: ${{ secrets.JIRA_USER_EMAIL }}
          JIRA_API_TOKEN: ${{ secrets.JIRA_API_TOKEN }}
          TICKET: ${{ steps.extract_ticket.outputs.TICKET }}
        run: |
          # Get issue type and transition ID
          ISSUE_INFO=$(curl -s -u ${JIRA_USER_EMAIL}:${JIRA_API_TOKEN} \
            -H "Content-Type: application/json" \
            "${JIRA_BASE_URL}/rest/api/3/issue/${TICKET}")

          IS_BUG=$(echo $ISSUE_INFO | jq -r '.fields.issuetype.name == "Bug"')
          RESOLUTION=$([ "$IS_BUG" = "true" ] && echo "Fixed" || echo "Done")

          TRANSITION_ID=$(echo $ISSUE_INFO | \
            jq -r '.transitions[] | select(.name == "Ready for Testing") | .id')

          # Update status and resolution in a single API call
          RESPONSE=$(curl -s -w "%{http_code}" -X POST \
            -u ${JIRA_USER_EMAIL}:${JIRA_API_TOKEN} \
            -H "Content-Type: application/json" \
            "${JIRA_BASE_URL}/rest/api/3/issue/${TICKET}/transitions" \
            -d "{
              \"transition\": {\"id\": \"${TRANSITION_ID}\"},
              \"fields\": {
                \"resolution\": {\"name\": \"${RESOLUTION}\"}
              }
            }")

          HTTP_STATUS=$(echo $RESPONSE | sed 's/.*\(...\)$/\1/')
          if [ $HTTP_STATUS -ne 204 ]; then
            echo "Failed to update Jira ticket. HTTP status: $HTTP_STATUS"
            exit 1
          fi

      - name: Comment on PR
        uses: actions/github-script@v7
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'QA automation completed successfully!'
            })
